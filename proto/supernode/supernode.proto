syntax = "proto3";
package supernode;
option go_package = "github.com/LumeraProtocol/supernode/gen/supernode";

import "google/api/annotations.proto";

// SupernodeService provides status information for all services
service SupernodeService {
  rpc GetStatus(StatusRequest) returns (StatusResponse) {
    option (google.api.http) = {
      get: "/api/v1/status"
    };
  }
  
  rpc ListServices(ListServicesRequest) returns (ListServicesResponse) {
    option (google.api.http) = {
      get: "/api/v1/services"
    };
  }
}

message StatusRequest {}

message ListServicesRequest {}

message ListServicesResponse {
  repeated ServiceInfo services = 1;
  int32 count = 2;
}

message ServiceInfo {
  string name = 1;
  repeated string methods = 2;
}

// The StatusResponse represents system status with clear organization
message StatusResponse {
  // System resource information
  message Resources {
    message CPU {
      double usage_percent = 1;  // CPU usage percentage (0-100)
    }
    
    message Memory {
      uint64 total_bytes = 1;
      uint64 used_bytes = 2;
      uint64 available_bytes = 3;
      double usage_percent = 4;  // Memory usage percentage (0-100)
    }
    
    message Storage {
      string path = 1;           // Storage path being monitored
      uint64 total_bytes = 2;
      uint64 used_bytes = 3;
      uint64 available_bytes = 4;
      double usage_percent = 5;  // Storage usage percentage (0-100)
    }
    
    CPU cpu = 1;
    Memory memory = 2;
    repeated Storage storage_volumes = 3;
  }
  
  // ServiceTasks contains task information for a specific service
  message ServiceTasks {
    string service_name = 1;
    repeated string task_ids = 2;
    int32 task_count = 3;
  }
  
  Resources resources = 1;
  repeated ServiceTasks running_tasks = 2;  // Services with currently running tasks
  repeated string registered_services = 3;   // All registered/available services
}