syntax = "proto3";
package cascade;
option go_package = "github.com/LumeraProtocol/supernode/gen/supernode/action/cascade";

service CascadeService {
  rpc Register (stream RegisterRequest) returns (stream RegisterResponse);
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);

}

message RegisterRequest {
  oneof request_type {
    DataChunk chunk = 1;
    Metadata metadata = 2;
  }
}

message DataChunk {
  bytes data = 1;
}

message Metadata {
  string task_id = 1;
  string action_id = 2;
}

message RegisterResponse {
  SupernodeEventType event_type = 1;
  string message = 2;
  string tx_hash = 3;
}

enum SupernodeEventType {
  UNKNOWN = 0;
  ACTION_RETRIEVED = 1;
  ACTION_FEE_VERIFIED = 2;
  TOP_SUPERNODE_CHECK_PASSED = 3;
  METADATA_DECODED = 4;
  DATA_HASH_VERIFIED = 5;
  INPUT_ENCODED = 6;
  SIGNATURE_VERIFIED = 7;
  RQID_GENERATED = 8;
  RQID_VERIFIED = 9;
  ARTEFACTS_STORED = 10;
  ACTION_FINALIZED = 11;
}

message HealthCheckRequest {}

// The HealthCheckResponse represents system health status.
message HealthCheckResponse {
  message CPU {
    string usage = 1;
    string remaining = 2;
  }

  message Memory {
    uint64 total = 1;
    uint64 used = 2;
    uint64 available = 3;
    double used_perc = 4;
  }

  CPU cpu = 1;
  Memory memory = 2;
  repeated string tasks_in_progress = 3;
}