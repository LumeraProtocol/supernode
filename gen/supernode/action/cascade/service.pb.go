// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: supernode/action/cascade/service.proto

package cascade

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SupernodeEventType int32

const (
	SupernodeEventType_UNKNOWN                    SupernodeEventType = 0
	SupernodeEventType_ACTION_RETRIEVED           SupernodeEventType = 1
	SupernodeEventType_ACTION_FEE_VERIFIED        SupernodeEventType = 2
	SupernodeEventType_TOP_SUPERNODE_CHECK_PASSED SupernodeEventType = 3
	SupernodeEventType_METADATA_DECODED           SupernodeEventType = 4
	SupernodeEventType_DATA_HASH_VERIFIED         SupernodeEventType = 5
	SupernodeEventType_INPUT_ENCODED              SupernodeEventType = 6
	SupernodeEventType_SIGNATURE_VERIFIED         SupernodeEventType = 7
	SupernodeEventType_RQID_GENERATED             SupernodeEventType = 8
	SupernodeEventType_RQID_VERIFIED              SupernodeEventType = 9
	SupernodeEventType_FINALIZE_SIMULATED         SupernodeEventType = 10
	SupernodeEventType_ARTEFACTS_STORED           SupernodeEventType = 11
	SupernodeEventType_ACTION_FINALIZED           SupernodeEventType = 12
	SupernodeEventType_ARTEFACTS_DOWNLOADED       SupernodeEventType = 13
	SupernodeEventType_FINALIZE_SIMULATION_FAILED SupernodeEventType = 14
	// Download phase markers (additive, backward compatible)
	SupernodeEventType_NETWORK_RETRIEVE_STARTED SupernodeEventType = 15 // Supernode started pulling symbols from network
	SupernodeEventType_DECODE_COMPLETED         SupernodeEventType = 16 // File reconstructed and verified; ready on disk
	SupernodeEventType_SERVE_READY              SupernodeEventType = 17 // File is ready to be streamed to client
)

// Enum value maps for SupernodeEventType.
var (
	SupernodeEventType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "ACTION_RETRIEVED",
		2:  "ACTION_FEE_VERIFIED",
		3:  "TOP_SUPERNODE_CHECK_PASSED",
		4:  "METADATA_DECODED",
		5:  "DATA_HASH_VERIFIED",
		6:  "INPUT_ENCODED",
		7:  "SIGNATURE_VERIFIED",
		8:  "RQID_GENERATED",
		9:  "RQID_VERIFIED",
		10: "FINALIZE_SIMULATED",
		11: "ARTEFACTS_STORED",
		12: "ACTION_FINALIZED",
		13: "ARTEFACTS_DOWNLOADED",
		14: "FINALIZE_SIMULATION_FAILED",
		15: "NETWORK_RETRIEVE_STARTED",
		16: "DECODE_COMPLETED",
		17: "SERVE_READY",
	}
	SupernodeEventType_value = map[string]int32{
		"UNKNOWN":                    0,
		"ACTION_RETRIEVED":           1,
		"ACTION_FEE_VERIFIED":        2,
		"TOP_SUPERNODE_CHECK_PASSED": 3,
		"METADATA_DECODED":           4,
		"DATA_HASH_VERIFIED":         5,
		"INPUT_ENCODED":              6,
		"SIGNATURE_VERIFIED":         7,
		"RQID_GENERATED":             8,
		"RQID_VERIFIED":              9,
		"FINALIZE_SIMULATED":         10,
		"ARTEFACTS_STORED":           11,
		"ACTION_FINALIZED":           12,
		"ARTEFACTS_DOWNLOADED":       13,
		"FINALIZE_SIMULATION_FAILED": 14,
		"NETWORK_RETRIEVE_STARTED":   15,
		"DECODE_COMPLETED":           16,
		"SERVE_READY":                17,
	}
)

func (x SupernodeEventType) Enum() *SupernodeEventType {
	p := new(SupernodeEventType)
	*p = x
	return p
}

func (x SupernodeEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SupernodeEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_supernode_action_cascade_service_proto_enumTypes[0].Descriptor()
}

func (SupernodeEventType) Type() protoreflect.EnumType {
	return &file_supernode_action_cascade_service_proto_enumTypes[0]
}

func (x SupernodeEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SupernodeEventType.Descriptor instead.
func (SupernodeEventType) EnumDescriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{0}
}

type RegisterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestType:
	//
	//	*RegisterRequest_Chunk
	//	*RegisterRequest_Metadata
	RequestType   isRegisterRequest_RequestType `protobuf_oneof:"request_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetRequestType() isRegisterRequest_RequestType {
	if x != nil {
		return x.RequestType
	}
	return nil
}

func (x *RegisterRequest) GetChunk() *DataChunk {
	if x != nil {
		if x, ok := x.RequestType.(*RegisterRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

func (x *RegisterRequest) GetMetadata() *Metadata {
	if x != nil {
		if x, ok := x.RequestType.(*RegisterRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

type isRegisterRequest_RequestType interface {
	isRegisterRequest_RequestType()
}

type RegisterRequest_Chunk struct {
	Chunk *DataChunk `protobuf:"bytes,1,opt,name=chunk,proto3,oneof"`
}

type RegisterRequest_Metadata struct {
	Metadata *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3,oneof"`
}

func (*RegisterRequest_Chunk) isRegisterRequest_RequestType() {}

func (*RegisterRequest_Metadata) isRegisterRequest_RequestType() {}

type DataChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataChunk) Reset() {
	*x = DataChunk{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunk) ProtoMessage() {}

func (x *DataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunk.ProtoReflect.Descriptor instead.
func (*DataChunk) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{1}
}

func (x *DataChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ActionId      string                 `protobuf:"bytes,2,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Metadata) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     SupernodeEventType     `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=cascade.SupernodeEventType" json:"event_type,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TxHash        string                 `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterResponse) GetEventType() SupernodeEventType {
	if x != nil {
		return x.EventType
	}
	return SupernodeEventType_UNKNOWN
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type DownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionId      string                 `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	Signature     string                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *DownloadRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type DownloadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ResponseType:
	//
	//	*DownloadResponse_Event
	//	*DownloadResponse_Chunk
	ResponseType  isDownloadResponse_ResponseType `protobuf_oneof:"response_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadResponse) GetResponseType() isDownloadResponse_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return nil
}

func (x *DownloadResponse) GetEvent() *DownloadEvent {
	if x != nil {
		if x, ok := x.ResponseType.(*DownloadResponse_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *DownloadResponse) GetChunk() *DataChunk {
	if x != nil {
		if x, ok := x.ResponseType.(*DownloadResponse_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isDownloadResponse_ResponseType interface {
	isDownloadResponse_ResponseType()
}

type DownloadResponse_Event struct {
	Event *DownloadEvent `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type DownloadResponse_Chunk struct {
	Chunk *DataChunk `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*DownloadResponse_Event) isDownloadResponse_ResponseType() {}

func (*DownloadResponse_Chunk) isDownloadResponse_ResponseType() {}

type DownloadEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     SupernodeEventType     `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=cascade.SupernodeEventType" json:"event_type,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadEvent) Reset() {
	*x = DownloadEvent{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadEvent) ProtoMessage() {}

func (x *DownloadEvent) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadEvent.ProtoReflect.Descriptor instead.
func (*DownloadEvent) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadEvent) GetEventType() SupernodeEventType {
	if x != nil {
		return x.EventType
	}
	return SupernodeEventType_UNKNOWN
}

func (x *DownloadEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_supernode_action_cascade_service_proto protoreflect.FileDescriptor

const file_supernode_action_cascade_service_proto_rawDesc = "" +
	"\n" +
	"&supernode/action/cascade/service.proto\x12\acascade\"~\n" +
	"\x0fRegisterRequest\x12*\n" +
	"\x05chunk\x18\x01 \x01(\v2\x12.cascade.DataChunkH\x00R\x05chunk\x12/\n" +
	"\bmetadata\x18\x02 \x01(\v2\x11.cascade.MetadataH\x00R\bmetadataB\x0e\n" +
	"\frequest_type\"\x1f\n" +
	"\tDataChunk\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"@\n" +
	"\bMetadata\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\taction_id\x18\x02 \x01(\tR\bactionId\"\x81\x01\n" +
	"\x10RegisterResponse\x12:\n" +
	"\n" +
	"event_type\x18\x01 \x01(\x0e2\x1b.cascade.SupernodeEventTypeR\teventType\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x17\n" +
	"\atx_hash\x18\x03 \x01(\tR\x06txHash\"L\n" +
	"\x0fDownloadRequest\x12\x1b\n" +
	"\taction_id\x18\x01 \x01(\tR\bactionId\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\tR\tsignature\"\x7f\n" +
	"\x10DownloadResponse\x12.\n" +
	"\x05event\x18\x01 \x01(\v2\x16.cascade.DownloadEventH\x00R\x05event\x12*\n" +
	"\x05chunk\x18\x02 \x01(\v2\x12.cascade.DataChunkH\x00R\x05chunkB\x0f\n" +
	"\rresponse_type\"e\n" +
	"\rDownloadEvent\x12:\n" +
	"\n" +
	"event_type\x18\x01 \x01(\x0e2\x1b.cascade.SupernodeEventTypeR\teventType\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\xb3\x03\n" +
	"\x12SupernodeEventType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x14\n" +
	"\x10ACTION_RETRIEVED\x10\x01\x12\x17\n" +
	"\x13ACTION_FEE_VERIFIED\x10\x02\x12\x1e\n" +
	"\x1aTOP_SUPERNODE_CHECK_PASSED\x10\x03\x12\x14\n" +
	"\x10METADATA_DECODED\x10\x04\x12\x16\n" +
	"\x12DATA_HASH_VERIFIED\x10\x05\x12\x11\n" +
	"\rINPUT_ENCODED\x10\x06\x12\x16\n" +
	"\x12SIGNATURE_VERIFIED\x10\a\x12\x12\n" +
	"\x0eRQID_GENERATED\x10\b\x12\x11\n" +
	"\rRQID_VERIFIED\x10\t\x12\x16\n" +
	"\x12FINALIZE_SIMULATED\x10\n" +
	"\x12\x14\n" +
	"\x10ARTEFACTS_STORED\x10\v\x12\x14\n" +
	"\x10ACTION_FINALIZED\x10\f\x12\x18\n" +
	"\x14ARTEFACTS_DOWNLOADED\x10\r\x12\x1e\n" +
	"\x1aFINALIZE_SIMULATION_FAILED\x10\x0e\x12\x1c\n" +
	"\x18NETWORK_RETRIEVE_STARTED\x10\x0f\x12\x14\n" +
	"\x10DECODE_COMPLETED\x10\x10\x12\x0f\n" +
	"\vSERVE_READY\x10\x112\x98\x01\n" +
	"\x0eCascadeService\x12C\n" +
	"\bRegister\x12\x18.cascade.RegisterRequest\x1a\x19.cascade.RegisterResponse(\x010\x01\x12A\n" +
	"\bDownload\x12\x18.cascade.DownloadRequest\x1a\x19.cascade.DownloadResponse0\x01BEZCgithub.com/LumeraProtocol/supernode/v2/gen/supernode/action/cascadeb\x06proto3"

var (
	file_supernode_action_cascade_service_proto_rawDescOnce sync.Once
	file_supernode_action_cascade_service_proto_rawDescData []byte
)

func file_supernode_action_cascade_service_proto_rawDescGZIP() []byte {
	file_supernode_action_cascade_service_proto_rawDescOnce.Do(func() {
		file_supernode_action_cascade_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_supernode_action_cascade_service_proto_rawDesc), len(file_supernode_action_cascade_service_proto_rawDesc)))
	})
	return file_supernode_action_cascade_service_proto_rawDescData
}

var file_supernode_action_cascade_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_supernode_action_cascade_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_supernode_action_cascade_service_proto_goTypes = []any{
	(SupernodeEventType)(0),  // 0: cascade.SupernodeEventType
	(*RegisterRequest)(nil),  // 1: cascade.RegisterRequest
	(*DataChunk)(nil),        // 2: cascade.DataChunk
	(*Metadata)(nil),         // 3: cascade.Metadata
	(*RegisterResponse)(nil), // 4: cascade.RegisterResponse
	(*DownloadRequest)(nil),  // 5: cascade.DownloadRequest
	(*DownloadResponse)(nil), // 6: cascade.DownloadResponse
	(*DownloadEvent)(nil),    // 7: cascade.DownloadEvent
}
var file_supernode_action_cascade_service_proto_depIdxs = []int32{
	2, // 0: cascade.RegisterRequest.chunk:type_name -> cascade.DataChunk
	3, // 1: cascade.RegisterRequest.metadata:type_name -> cascade.Metadata
	0, // 2: cascade.RegisterResponse.event_type:type_name -> cascade.SupernodeEventType
	7, // 3: cascade.DownloadResponse.event:type_name -> cascade.DownloadEvent
	2, // 4: cascade.DownloadResponse.chunk:type_name -> cascade.DataChunk
	0, // 5: cascade.DownloadEvent.event_type:type_name -> cascade.SupernodeEventType
	1, // 6: cascade.CascadeService.Register:input_type -> cascade.RegisterRequest
	5, // 7: cascade.CascadeService.Download:input_type -> cascade.DownloadRequest
	4, // 8: cascade.CascadeService.Register:output_type -> cascade.RegisterResponse
	6, // 9: cascade.CascadeService.Download:output_type -> cascade.DownloadResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_supernode_action_cascade_service_proto_init() }
func file_supernode_action_cascade_service_proto_init() {
	if File_supernode_action_cascade_service_proto != nil {
		return
	}
	file_supernode_action_cascade_service_proto_msgTypes[0].OneofWrappers = []any{
		(*RegisterRequest_Chunk)(nil),
		(*RegisterRequest_Metadata)(nil),
	}
	file_supernode_action_cascade_service_proto_msgTypes[5].OneofWrappers = []any{
		(*DownloadResponse_Event)(nil),
		(*DownloadResponse_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_supernode_action_cascade_service_proto_rawDesc), len(file_supernode_action_cascade_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_supernode_action_cascade_service_proto_goTypes,
		DependencyIndexes: file_supernode_action_cascade_service_proto_depIdxs,
		EnumInfos:         file_supernode_action_cascade_service_proto_enumTypes,
		MessageInfos:      file_supernode_action_cascade_service_proto_msgTypes,
	}.Build()
	File_supernode_action_cascade_service_proto = out.File
	file_supernode_action_cascade_service_proto_goTypes = nil
	file_supernode_action_cascade_service_proto_depIdxs = nil
}
