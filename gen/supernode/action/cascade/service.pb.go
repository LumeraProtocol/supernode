// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: supernode/action/cascade/service.proto

package cascade

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SupernodeEventType int32

const (
	SupernodeEventType_UNKNOWN                    SupernodeEventType = 0
	SupernodeEventType_ACTION_RETRIEVED           SupernodeEventType = 1
	SupernodeEventType_ACTION_FEE_VERIFIED        SupernodeEventType = 2
	SupernodeEventType_TOP_SUPERNODE_CHECK_PASSED SupernodeEventType = 3
	SupernodeEventType_METADATA_DECODED           SupernodeEventType = 4
	SupernodeEventType_DATA_HASH_VERIFIED         SupernodeEventType = 5
	SupernodeEventType_INPUT_ENCODED              SupernodeEventType = 6
	SupernodeEventType_SIGNATURE_VERIFIED         SupernodeEventType = 7
	SupernodeEventType_RQID_GENERATED             SupernodeEventType = 8
	SupernodeEventType_RQID_VERIFIED              SupernodeEventType = 9
	SupernodeEventType_ARTEFACTS_STORED           SupernodeEventType = 10
	SupernodeEventType_ACTION_FINALIZED           SupernodeEventType = 11
)

// Enum value maps for SupernodeEventType.
var (
	SupernodeEventType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "ACTION_RETRIEVED",
		2:  "ACTION_FEE_VERIFIED",
		3:  "TOP_SUPERNODE_CHECK_PASSED",
		4:  "METADATA_DECODED",
		5:  "DATA_HASH_VERIFIED",
		6:  "INPUT_ENCODED",
		7:  "SIGNATURE_VERIFIED",
		8:  "RQID_GENERATED",
		9:  "RQID_VERIFIED",
		10: "ARTEFACTS_STORED",
		11: "ACTION_FINALIZED",
	}
	SupernodeEventType_value = map[string]int32{
		"UNKNOWN":                    0,
		"ACTION_RETRIEVED":           1,
		"ACTION_FEE_VERIFIED":        2,
		"TOP_SUPERNODE_CHECK_PASSED": 3,
		"METADATA_DECODED":           4,
		"DATA_HASH_VERIFIED":         5,
		"INPUT_ENCODED":              6,
		"SIGNATURE_VERIFIED":         7,
		"RQID_GENERATED":             8,
		"RQID_VERIFIED":              9,
		"ARTEFACTS_STORED":           10,
		"ACTION_FINALIZED":           11,
	}
)

func (x SupernodeEventType) Enum() *SupernodeEventType {
	p := new(SupernodeEventType)
	*p = x
	return p
}

func (x SupernodeEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SupernodeEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_supernode_action_cascade_service_proto_enumTypes[0].Descriptor()
}

func (SupernodeEventType) Type() protoreflect.EnumType {
	return &file_supernode_action_cascade_service_proto_enumTypes[0]
}

func (x SupernodeEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SupernodeEventType.Descriptor instead.
func (SupernodeEventType) EnumDescriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{0}
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RequestType:
	//
	//	*RegisterRequest_Chunk
	//	*RegisterRequest_Metadata
	RequestType isRegisterRequest_RequestType `protobuf_oneof:"request_type"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{0}
}

func (m *RegisterRequest) GetRequestType() isRegisterRequest_RequestType {
	if m != nil {
		return m.RequestType
	}
	return nil
}

func (x *RegisterRequest) GetChunk() *DataChunk {
	if x, ok := x.GetRequestType().(*RegisterRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (x *RegisterRequest) GetMetadata() *Metadata {
	if x, ok := x.GetRequestType().(*RegisterRequest_Metadata); ok {
		return x.Metadata
	}
	return nil
}

type isRegisterRequest_RequestType interface {
	isRegisterRequest_RequestType()
}

type RegisterRequest_Chunk struct {
	Chunk *DataChunk `protobuf:"bytes,1,opt,name=chunk,proto3,oneof"`
}

type RegisterRequest_Metadata struct {
	Metadata *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3,oneof"`
}

func (*RegisterRequest_Chunk) isRegisterRequest_RequestType() {}

func (*RegisterRequest_Metadata) isRegisterRequest_RequestType() {}

type DataChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DataChunk) Reset() {
	*x = DataChunk{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunk) ProtoMessage() {}

func (x *DataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunk.ProtoReflect.Descriptor instead.
func (*DataChunk) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{1}
}

func (x *DataChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ActionId string `protobuf:"bytes,2,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Metadata) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType SupernodeEventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=cascade.SupernodeEventType" json:"event_type,omitempty"`
	Message   string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TxHash    string             `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_supernode_action_cascade_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_action_cascade_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_supernode_action_cascade_service_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterResponse) GetEventType() SupernodeEventType {
	if x != nil {
		return x.EventType
	}
	return SupernodeEventType_UNKNOWN
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

var File_supernode_action_cascade_service_proto protoreflect.FileDescriptor

var file_supernode_action_cascade_service_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64,
	0x65, 0x22, 0x7e, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x1f, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x40, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x64,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x2a, 0x9c, 0x02, 0x0a, 0x12, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x49, 0x45, 0x56, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x45, 0x45,
	0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x54,
	0x4f, 0x50, 0x5f, 0x53, 0x55, 0x50, 0x45, 0x52, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x48, 0x45,
	0x43, 0x4b, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4d,
	0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x44, 0x45, 0x43, 0x4f, 0x44, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x56,
	0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x5f, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x45, 0x44, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x51, 0x49, 0x44, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x54, 0x45, 0x44, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x51, 0x49, 0x44,
	0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x41,
	0x52, 0x54, 0x45, 0x46, 0x41, 0x43, 0x54, 0x53, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x44, 0x10,
	0x0a, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x4e, 0x41,
	0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x0b, 0x32, 0x55, 0x0a, 0x0e, 0x43, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x63, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x42,
	0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x75, 0x6d,
	0x65, 0x72, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e,
	0x6f, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x61, 0x73, 0x63, 0x61,
	0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_supernode_action_cascade_service_proto_rawDescOnce sync.Once
	file_supernode_action_cascade_service_proto_rawDescData = file_supernode_action_cascade_service_proto_rawDesc
)

func file_supernode_action_cascade_service_proto_rawDescGZIP() []byte {
	file_supernode_action_cascade_service_proto_rawDescOnce.Do(func() {
		file_supernode_action_cascade_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_supernode_action_cascade_service_proto_rawDescData)
	})
	return file_supernode_action_cascade_service_proto_rawDescData
}

var file_supernode_action_cascade_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_supernode_action_cascade_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_supernode_action_cascade_service_proto_goTypes = []any{
	(SupernodeEventType)(0),  // 0: cascade.SupernodeEventType
	(*RegisterRequest)(nil),  // 1: cascade.RegisterRequest
	(*DataChunk)(nil),        // 2: cascade.DataChunk
	(*Metadata)(nil),         // 3: cascade.Metadata
	(*RegisterResponse)(nil), // 4: cascade.RegisterResponse
}
var file_supernode_action_cascade_service_proto_depIdxs = []int32{
	2, // 0: cascade.RegisterRequest.chunk:type_name -> cascade.DataChunk
	3, // 1: cascade.RegisterRequest.metadata:type_name -> cascade.Metadata
	0, // 2: cascade.RegisterResponse.event_type:type_name -> cascade.SupernodeEventType
	1, // 3: cascade.CascadeService.Register:input_type -> cascade.RegisterRequest
	4, // 4: cascade.CascadeService.Register:output_type -> cascade.RegisterResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_supernode_action_cascade_service_proto_init() }
func file_supernode_action_cascade_service_proto_init() {
	if File_supernode_action_cascade_service_proto != nil {
		return
	}
	file_supernode_action_cascade_service_proto_msgTypes[0].OneofWrappers = []any{
		(*RegisterRequest_Chunk)(nil),
		(*RegisterRequest_Metadata)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_supernode_action_cascade_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_supernode_action_cascade_service_proto_goTypes,
		DependencyIndexes: file_supernode_action_cascade_service_proto_depIdxs,
		EnumInfos:         file_supernode_action_cascade_service_proto_enumTypes,
		MessageInfos:      file_supernode_action_cascade_service_proto_msgTypes,
	}.Build()
	File_supernode_action_cascade_service_proto = out.File
	file_supernode_action_cascade_service_proto_rawDesc = nil
	file_supernode_action_cascade_service_proto_goTypes = nil
	file_supernode_action_cascade_service_proto_depIdxs = nil
}
