// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: supernode/status.proto

package supernode

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StatusRequest controls optional metrics in the status response
type StatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional: include detailed P2P metrics in the response
	// Maps to query param via grpc-gateway: /api/v1/status?include_p2p_metrics=true
	IncludeP2PMetrics bool `protobuf:"varint,1,opt,name=include_p2p_metrics,json=includeP2pMetrics,proto3" json:"include_p2p_metrics,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_supernode_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{0}
}

func (x *StatusRequest) GetIncludeP2PMetrics() bool {
	if x != nil {
		return x.IncludeP2PMetrics
	}
	return false
}

// The StatusResponse represents system status with clear organization
type StatusResponse struct {
	state              protoimpl.MessageState         `protogen:"open.v1"`
	Version            string                         `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                                   // Supernode version
	UptimeSeconds      uint64                         `protobuf:"varint,2,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"` // Uptime in seconds
	Resources          *StatusResponse_Resources      `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	RunningTasks       []*StatusResponse_ServiceTasks `protobuf:"bytes,4,rep,name=running_tasks,json=runningTasks,proto3" json:"running_tasks,omitempty"`                   // Services with currently running tasks
	RegisteredServices []string                       `protobuf:"bytes,5,rep,name=registered_services,json=registeredServices,proto3" json:"registered_services,omitempty"` // All registered/available services
	Network            *StatusResponse_Network        `protobuf:"bytes,6,opt,name=network,proto3" json:"network,omitempty"`                                                 // P2P network information
	Rank               int32                          `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`                                                      // Rank in the top supernodes list (0 if not in top list)
	IpAddress          string                         `protobuf:"bytes,8,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`                            // Supernode IP address with port (e.g., "192.168.1.1:4445")
	P2PMetrics         *StatusResponse_P2PMetrics     `protobuf:"bytes,9,opt,name=p2p_metrics,json=p2pMetrics,proto3" json:"p2p_metrics,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_supernode_status_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1}
}

func (x *StatusResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *StatusResponse) GetUptimeSeconds() uint64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *StatusResponse) GetResources() *StatusResponse_Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *StatusResponse) GetRunningTasks() []*StatusResponse_ServiceTasks {
	if x != nil {
		return x.RunningTasks
	}
	return nil
}

func (x *StatusResponse) GetRegisteredServices() []string {
	if x != nil {
		return x.RegisteredServices
	}
	return nil
}

func (x *StatusResponse) GetNetwork() *StatusResponse_Network {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *StatusResponse) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *StatusResponse) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *StatusResponse) GetP2PMetrics() *StatusResponse_P2PMetrics {
	if x != nil {
		return x.P2PMetrics
	}
	return nil
}

// System resource information
type StatusResponse_Resources struct {
	state           protoimpl.MessageState              `protogen:"open.v1"`
	Cpu             *StatusResponse_Resources_CPU       `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory          *StatusResponse_Resources_Memory    `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	StorageVolumes  []*StatusResponse_Resources_Storage `protobuf:"bytes,3,rep,name=storage_volumes,json=storageVolumes,proto3" json:"storage_volumes,omitempty"`
	HardwareSummary string                              `protobuf:"bytes,4,opt,name=hardware_summary,json=hardwareSummary,proto3" json:"hardware_summary,omitempty"` // Formatted hardware summary (e.g., "8 cores / 32GB RAM")
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StatusResponse_Resources) Reset() {
	*x = StatusResponse_Resources{}
	mi := &file_supernode_status_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Resources) ProtoMessage() {}

func (x *StatusResponse_Resources) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Resources.ProtoReflect.Descriptor instead.
func (*StatusResponse_Resources) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StatusResponse_Resources) GetCpu() *StatusResponse_Resources_CPU {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *StatusResponse_Resources) GetMemory() *StatusResponse_Resources_Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *StatusResponse_Resources) GetStorageVolumes() []*StatusResponse_Resources_Storage {
	if x != nil {
		return x.StorageVolumes
	}
	return nil
}

func (x *StatusResponse_Resources) GetHardwareSummary() string {
	if x != nil {
		return x.HardwareSummary
	}
	return ""
}

// ServiceTasks contains task information for a specific service
type StatusResponse_ServiceTasks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	TaskIds       []string               `protobuf:"bytes,2,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
	TaskCount     int32                  `protobuf:"varint,3,opt,name=task_count,json=taskCount,proto3" json:"task_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_ServiceTasks) Reset() {
	*x = StatusResponse_ServiceTasks{}
	mi := &file_supernode_status_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_ServiceTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_ServiceTasks) ProtoMessage() {}

func (x *StatusResponse_ServiceTasks) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_ServiceTasks.ProtoReflect.Descriptor instead.
func (*StatusResponse_ServiceTasks) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 1}
}

func (x *StatusResponse_ServiceTasks) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *StatusResponse_ServiceTasks) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *StatusResponse_ServiceTasks) GetTaskCount() int32 {
	if x != nil {
		return x.TaskCount
	}
	return 0
}

// Network information
type StatusResponse_Network struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeersCount    int32                  `protobuf:"varint,1,opt,name=peers_count,json=peersCount,proto3" json:"peers_count,omitempty"`         // Number of connected peers in P2P network
	PeerAddresses []string               `protobuf:"bytes,2,rep,name=peer_addresses,json=peerAddresses,proto3" json:"peer_addresses,omitempty"` // List of connected peer addresses (optional, may be empty for privacy)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_Network) Reset() {
	*x = StatusResponse_Network{}
	mi := &file_supernode_status_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Network) ProtoMessage() {}

func (x *StatusResponse_Network) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Network.ProtoReflect.Descriptor instead.
func (*StatusResponse_Network) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 2}
}

func (x *StatusResponse_Network) GetPeersCount() int32 {
	if x != nil {
		return x.PeersCount
	}
	return 0
}

func (x *StatusResponse_Network) GetPeerAddresses() []string {
	if x != nil {
		return x.PeerAddresses
	}
	return nil
}

// P2P metrics and diagnostics (additive field)
type StatusResponse_P2PMetrics struct {
	state                protoimpl.MessageState                               `protogen:"open.v1"`
	DhtMetrics           *StatusResponse_P2PMetrics_DhtMetrics                `protobuf:"bytes,1,opt,name=dht_metrics,json=dhtMetrics,proto3" json:"dht_metrics,omitempty"`
	NetworkHandleMetrics map[string]*StatusResponse_P2PMetrics_HandleCounters `protobuf:"bytes,2,rep,name=network_handle_metrics,json=networkHandleMetrics,proto3" json:"network_handle_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ConnPoolMetrics      map[string]int64                                     `protobuf:"bytes,3,rep,name=conn_pool_metrics,json=connPoolMetrics,proto3" json:"conn_pool_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	BanList              []*StatusResponse_P2PMetrics_BanEntry                `protobuf:"bytes,4,rep,name=ban_list,json=banList,proto3" json:"ban_list,omitempty"`
	Database             *StatusResponse_P2PMetrics_DatabaseStats             `protobuf:"bytes,5,opt,name=database,proto3" json:"database,omitempty"`
	Disk                 *StatusResponse_P2PMetrics_DiskStatus                `protobuf:"bytes,6,opt,name=disk,proto3" json:"disk,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StatusResponse_P2PMetrics) Reset() {
	*x = StatusResponse_P2PMetrics{}
	mi := &file_supernode_status_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_P2PMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_P2PMetrics) ProtoMessage() {}

func (x *StatusResponse_P2PMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_P2PMetrics.ProtoReflect.Descriptor instead.
func (*StatusResponse_P2PMetrics) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 3}
}

func (x *StatusResponse_P2PMetrics) GetDhtMetrics() *StatusResponse_P2PMetrics_DhtMetrics {
	if x != nil {
		return x.DhtMetrics
	}
	return nil
}

func (x *StatusResponse_P2PMetrics) GetNetworkHandleMetrics() map[string]*StatusResponse_P2PMetrics_HandleCounters {
	if x != nil {
		return x.NetworkHandleMetrics
	}
	return nil
}

func (x *StatusResponse_P2PMetrics) GetConnPoolMetrics() map[string]int64 {
	if x != nil {
		return x.ConnPoolMetrics
	}
	return nil
}

func (x *StatusResponse_P2PMetrics) GetBanList() []*StatusResponse_P2PMetrics_BanEntry {
	if x != nil {
		return x.BanList
	}
	return nil
}

func (x *StatusResponse_P2PMetrics) GetDatabase() *StatusResponse_P2PMetrics_DatabaseStats {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *StatusResponse_P2PMetrics) GetDisk() *StatusResponse_P2PMetrics_DiskStatus {
	if x != nil {
		return x.Disk
	}
	return nil
}

type StatusResponse_Resources_CPU struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsagePercent  float64                `protobuf:"fixed64,1,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"` // CPU usage percentage (0-100)
	Cores         int32                  `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`                                    // Number of CPU cores
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_Resources_CPU) Reset() {
	*x = StatusResponse_Resources_CPU{}
	mi := &file_supernode_status_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Resources_CPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Resources_CPU) ProtoMessage() {}

func (x *StatusResponse_Resources_CPU) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Resources_CPU.ProtoReflect.Descriptor instead.
func (*StatusResponse_Resources_CPU) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *StatusResponse_Resources_CPU) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *StatusResponse_Resources_CPU) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

type StatusResponse_Resources_Memory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalGb       float64                `protobuf:"fixed64,1,opt,name=total_gb,json=totalGb,proto3" json:"total_gb,omitempty"`                // Total memory in GB
	UsedGb        float64                `protobuf:"fixed64,2,opt,name=used_gb,json=usedGb,proto3" json:"used_gb,omitempty"`                   // Used memory in GB
	AvailableGb   float64                `protobuf:"fixed64,3,opt,name=available_gb,json=availableGb,proto3" json:"available_gb,omitempty"`    // Available memory in GB
	UsagePercent  float64                `protobuf:"fixed64,4,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"` // Memory usage percentage (0-100)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_Resources_Memory) Reset() {
	*x = StatusResponse_Resources_Memory{}
	mi := &file_supernode_status_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Resources_Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Resources_Memory) ProtoMessage() {}

func (x *StatusResponse_Resources_Memory) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Resources_Memory.ProtoReflect.Descriptor instead.
func (*StatusResponse_Resources_Memory) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *StatusResponse_Resources_Memory) GetTotalGb() float64 {
	if x != nil {
		return x.TotalGb
	}
	return 0
}

func (x *StatusResponse_Resources_Memory) GetUsedGb() float64 {
	if x != nil {
		return x.UsedGb
	}
	return 0
}

func (x *StatusResponse_Resources_Memory) GetAvailableGb() float64 {
	if x != nil {
		return x.AvailableGb
	}
	return 0
}

func (x *StatusResponse_Resources_Memory) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

type StatusResponse_Resources_Storage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Path           string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Storage path being monitored
	TotalBytes     uint64                 `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	UsedBytes      uint64                 `protobuf:"varint,3,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	AvailableBytes uint64                 `protobuf:"varint,4,opt,name=available_bytes,json=availableBytes,proto3" json:"available_bytes,omitempty"`
	UsagePercent   float64                `protobuf:"fixed64,5,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"` // Storage usage percentage (0-100)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StatusResponse_Resources_Storage) Reset() {
	*x = StatusResponse_Resources_Storage{}
	mi := &file_supernode_status_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Resources_Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Resources_Storage) ProtoMessage() {}

func (x *StatusResponse_Resources_Storage) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Resources_Storage.ProtoReflect.Descriptor instead.
func (*StatusResponse_Resources_Storage) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 0, 2}
}

func (x *StatusResponse_Resources_Storage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StatusResponse_Resources_Storage) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *StatusResponse_Resources_Storage) GetUsedBytes() uint64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *StatusResponse_Resources_Storage) GetAvailableBytes() uint64 {
	if x != nil {
		return x.AvailableBytes
	}
	return 0
}

func (x *StatusResponse_Resources_Storage) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

// Rolling DHT metrics snapshot
type StatusResponse_P2PMetrics_DhtMetrics struct {
	state                protoimpl.MessageState                                     `protogen:"open.v1"`
	StoreSuccessRecent   []*StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint  `protobuf:"bytes,1,rep,name=store_success_recent,json=storeSuccessRecent,proto3" json:"store_success_recent,omitempty"`
	BatchRetrieveRecent  []*StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint `protobuf:"bytes,2,rep,name=batch_retrieve_recent,json=batchRetrieveRecent,proto3" json:"batch_retrieve_recent,omitempty"`
	HotPathBannedSkips   int64                                                      `protobuf:"varint,3,opt,name=hot_path_banned_skips,json=hotPathBannedSkips,proto3" json:"hot_path_banned_skips,omitempty"`       // counter
	HotPathBanIncrements int64                                                      `protobuf:"varint,4,opt,name=hot_path_ban_increments,json=hotPathBanIncrements,proto3" json:"hot_path_ban_increments,omitempty"` // counter
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StatusResponse_P2PMetrics_DhtMetrics) Reset() {
	*x = StatusResponse_P2PMetrics_DhtMetrics{}
	mi := &file_supernode_status_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_P2PMetrics_DhtMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_P2PMetrics_DhtMetrics) ProtoMessage() {}

func (x *StatusResponse_P2PMetrics_DhtMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_P2PMetrics_DhtMetrics.ProtoReflect.Descriptor instead.
func (*StatusResponse_P2PMetrics_DhtMetrics) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 3, 0}
}

func (x *StatusResponse_P2PMetrics_DhtMetrics) GetStoreSuccessRecent() []*StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint {
	if x != nil {
		return x.StoreSuccessRecent
	}
	return nil
}

func (x *StatusResponse_P2PMetrics_DhtMetrics) GetBatchRetrieveRecent() []*StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint {
	if x != nil {
		return x.BatchRetrieveRecent
	}
	return nil
}

func (x *StatusResponse_P2PMetrics_DhtMetrics) GetHotPathBannedSkips() int64 {
	if x != nil {
		return x.HotPathBannedSkips
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DhtMetrics) GetHotPathBanIncrements() int64 {
	if x != nil {
		return x.HotPathBanIncrements
	}
	return 0
}

// Per-handler counters from network layer
type StatusResponse_P2PMetrics_HandleCounters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Success       int64                  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Failure       int64                  `protobuf:"varint,3,opt,name=failure,proto3" json:"failure,omitempty"`
	Timeout       int64                  `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_P2PMetrics_HandleCounters) Reset() {
	*x = StatusResponse_P2PMetrics_HandleCounters{}
	mi := &file_supernode_status_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_P2PMetrics_HandleCounters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_P2PMetrics_HandleCounters) ProtoMessage() {}

func (x *StatusResponse_P2PMetrics_HandleCounters) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_P2PMetrics_HandleCounters.ProtoReflect.Descriptor instead.
func (*StatusResponse_P2PMetrics_HandleCounters) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 3, 1}
}

func (x *StatusResponse_P2PMetrics_HandleCounters) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_HandleCounters) GetSuccess() int64 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_HandleCounters) GetFailure() int64 {
	if x != nil {
		return x.Failure
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_HandleCounters) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// Ban list entry
type StatusResponse_P2PMetrics_BanEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                               // printable ID
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`                                               // last seen IP
	Port          uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`                                          // last seen port
	Count         int32                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`                                        // failure count
	CreatedAtUnix int64                  `protobuf:"varint,5,opt,name=created_at_unix,json=createdAtUnix,proto3" json:"created_at_unix,omitempty"` // first ban time (unix seconds)
	AgeSeconds    int64                  `protobuf:"varint,6,opt,name=age_seconds,json=ageSeconds,proto3" json:"age_seconds,omitempty"`            // age in seconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_P2PMetrics_BanEntry) Reset() {
	*x = StatusResponse_P2PMetrics_BanEntry{}
	mi := &file_supernode_status_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_P2PMetrics_BanEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_P2PMetrics_BanEntry) ProtoMessage() {}

func (x *StatusResponse_P2PMetrics_BanEntry) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_P2PMetrics_BanEntry.ProtoReflect.Descriptor instead.
func (*StatusResponse_P2PMetrics_BanEntry) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 3, 2}
}

func (x *StatusResponse_P2PMetrics_BanEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StatusResponse_P2PMetrics_BanEntry) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *StatusResponse_P2PMetrics_BanEntry) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_BanEntry) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_BanEntry) GetCreatedAtUnix() int64 {
	if x != nil {
		return x.CreatedAtUnix
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_BanEntry) GetAgeSeconds() int64 {
	if x != nil {
		return x.AgeSeconds
	}
	return 0
}

// DB stats
type StatusResponse_P2PMetrics_DatabaseStats struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	P2PDbSizeMb       float64                `protobuf:"fixed64,1,opt,name=p2p_db_size_mb,json=p2pDbSizeMb,proto3" json:"p2p_db_size_mb,omitempty"`
	P2PDbRecordsCount int64                  `protobuf:"varint,2,opt,name=p2p_db_records_count,json=p2pDbRecordsCount,proto3" json:"p2p_db_records_count,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StatusResponse_P2PMetrics_DatabaseStats) Reset() {
	*x = StatusResponse_P2PMetrics_DatabaseStats{}
	mi := &file_supernode_status_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_P2PMetrics_DatabaseStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_P2PMetrics_DatabaseStats) ProtoMessage() {}

func (x *StatusResponse_P2PMetrics_DatabaseStats) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_P2PMetrics_DatabaseStats.ProtoReflect.Descriptor instead.
func (*StatusResponse_P2PMetrics_DatabaseStats) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 3, 3}
}

func (x *StatusResponse_P2PMetrics_DatabaseStats) GetP2PDbSizeMb() float64 {
	if x != nil {
		return x.P2PDbSizeMb
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DatabaseStats) GetP2PDbRecordsCount() int64 {
	if x != nil {
		return x.P2PDbRecordsCount
	}
	return 0
}

// Disk status
type StatusResponse_P2PMetrics_DiskStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllMb         float64                `protobuf:"fixed64,1,opt,name=all_mb,json=allMb,proto3" json:"all_mb,omitempty"`
	UsedMb        float64                `protobuf:"fixed64,2,opt,name=used_mb,json=usedMb,proto3" json:"used_mb,omitempty"`
	FreeMb        float64                `protobuf:"fixed64,3,opt,name=free_mb,json=freeMb,proto3" json:"free_mb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_P2PMetrics_DiskStatus) Reset() {
	*x = StatusResponse_P2PMetrics_DiskStatus{}
	mi := &file_supernode_status_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_P2PMetrics_DiskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_P2PMetrics_DiskStatus) ProtoMessage() {}

func (x *StatusResponse_P2PMetrics_DiskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_P2PMetrics_DiskStatus.ProtoReflect.Descriptor instead.
func (*StatusResponse_P2PMetrics_DiskStatus) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 3, 4}
}

func (x *StatusResponse_P2PMetrics_DiskStatus) GetAllMb() float64 {
	if x != nil {
		return x.AllMb
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DiskStatus) GetUsedMb() float64 {
	if x != nil {
		return x.UsedMb
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DiskStatus) GetFreeMb() float64 {
	if x != nil {
		return x.FreeMb
	}
	return 0
}

type StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeUnix      int64                  `protobuf:"varint,1,opt,name=time_unix,json=timeUnix,proto3" json:"time_unix,omitempty"`           // event time (unix seconds)
	Requests      int32                  `protobuf:"varint,2,opt,name=requests,proto3" json:"requests,omitempty"`                           // total node RPCs attempted
	Successful    int32                  `protobuf:"varint,3,opt,name=successful,proto3" json:"successful,omitempty"`                       // successful node RPCs
	SuccessRate   float64                `protobuf:"fixed64,4,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"` // percentage (0-100)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint) Reset() {
	*x = StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint{}
	mi := &file_supernode_status_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint) ProtoMessage() {}

func (x *StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint.ProtoReflect.Descriptor instead.
func (*StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 3, 0, 0}
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint) GetTimeUnix() int64 {
	if x != nil {
		return x.TimeUnix
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint) GetRequests() int32 {
	if x != nil {
		return x.Requests
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint) GetSuccessful() int32 {
	if x != nil {
		return x.Successful
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

type StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeUnix      int64                  `protobuf:"varint,1,opt,name=time_unix,json=timeUnix,proto3" json:"time_unix,omitempty"`             // event time (unix seconds)
	Keys          int32                  `protobuf:"varint,2,opt,name=keys,proto3" json:"keys,omitempty"`                                     // keys requested
	Required      int32                  `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`                             // required count
	FoundLocal    int32                  `protobuf:"varint,4,opt,name=found_local,json=foundLocal,proto3" json:"found_local,omitempty"`       // found locally
	FoundNetwork  int32                  `protobuf:"varint,5,opt,name=found_network,json=foundNetwork,proto3" json:"found_network,omitempty"` // found on network
	DurationMs    int64                  `protobuf:"varint,6,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`       // duration in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) Reset() {
	*x = StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint{}
	mi := &file_supernode_status_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) ProtoMessage() {}

func (x *StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_status_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint.ProtoReflect.Descriptor instead.
func (*StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) Descriptor() ([]byte, []int) {
	return file_supernode_status_proto_rawDescGZIP(), []int{1, 3, 0, 1}
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) GetTimeUnix() int64 {
	if x != nil {
		return x.TimeUnix
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) GetKeys() int32 {
	if x != nil {
		return x.Keys
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) GetRequired() int32 {
	if x != nil {
		return x.Required
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) GetFoundLocal() int32 {
	if x != nil {
		return x.FoundLocal
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) GetFoundNetwork() int32 {
	if x != nil {
		return x.FoundNetwork
	}
	return 0
}

func (x *StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

var File_supernode_status_proto protoreflect.FileDescriptor

const file_supernode_status_proto_rawDesc = "" +
	"\n" +
	"\x16supernode/status.proto\x12\tsupernode\"?\n" +
	"\rStatusRequest\x12.\n" +
	"\x13include_p2p_metrics\x18\x01 \x01(\bR\x11includeP2pMetrics\"\x84\x19\n" +
	"\x0eStatusResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12%\n" +
	"\x0euptime_seconds\x18\x02 \x01(\x04R\ruptimeSeconds\x12A\n" +
	"\tresources\x18\x03 \x01(\v2#.supernode.StatusResponse.ResourcesR\tresources\x12K\n" +
	"\rrunning_tasks\x18\x04 \x03(\v2&.supernode.StatusResponse.ServiceTasksR\frunningTasks\x12/\n" +
	"\x13registered_services\x18\x05 \x03(\tR\x12registeredServices\x12;\n" +
	"\anetwork\x18\x06 \x01(\v2!.supernode.StatusResponse.NetworkR\anetwork\x12\x12\n" +
	"\x04rank\x18\a \x01(\x05R\x04rank\x12\x1d\n" +
	"\n" +
	"ip_address\x18\b \x01(\tR\tipAddress\x12E\n" +
	"\vp2p_metrics\x18\t \x01(\v2$.supernode.StatusResponse.P2PMetricsR\n" +
	"p2pMetrics\x1a\x82\x05\n" +
	"\tResources\x129\n" +
	"\x03cpu\x18\x01 \x01(\v2'.supernode.StatusResponse.Resources.CPUR\x03cpu\x12B\n" +
	"\x06memory\x18\x02 \x01(\v2*.supernode.StatusResponse.Resources.MemoryR\x06memory\x12T\n" +
	"\x0fstorage_volumes\x18\x03 \x03(\v2+.supernode.StatusResponse.Resources.StorageR\x0estorageVolumes\x12)\n" +
	"\x10hardware_summary\x18\x04 \x01(\tR\x0fhardwareSummary\x1a@\n" +
	"\x03CPU\x12#\n" +
	"\rusage_percent\x18\x01 \x01(\x01R\fusagePercent\x12\x14\n" +
	"\x05cores\x18\x02 \x01(\x05R\x05cores\x1a\x84\x01\n" +
	"\x06Memory\x12\x19\n" +
	"\btotal_gb\x18\x01 \x01(\x01R\atotalGb\x12\x17\n" +
	"\aused_gb\x18\x02 \x01(\x01R\x06usedGb\x12!\n" +
	"\favailable_gb\x18\x03 \x01(\x01R\vavailableGb\x12#\n" +
	"\rusage_percent\x18\x04 \x01(\x01R\fusagePercent\x1a\xab\x01\n" +
	"\aStorage\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1f\n" +
	"\vtotal_bytes\x18\x02 \x01(\x04R\n" +
	"totalBytes\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x03 \x01(\x04R\tusedBytes\x12'\n" +
	"\x0favailable_bytes\x18\x04 \x01(\x04R\x0eavailableBytes\x12#\n" +
	"\rusage_percent\x18\x05 \x01(\x01R\fusagePercent\x1ak\n" +
	"\fServiceTasks\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x19\n" +
	"\btask_ids\x18\x02 \x03(\tR\ataskIds\x12\x1d\n" +
	"\n" +
	"task_count\x18\x03 \x01(\x05R\ttaskCount\x1aQ\n" +
	"\aNetwork\x12\x1f\n" +
	"\vpeers_count\x18\x01 \x01(\x05R\n" +
	"peersCount\x12%\n" +
	"\x0epeer_addresses\x18\x02 \x03(\tR\rpeerAddresses\x1a\xf3\x0e\n" +
	"\n" +
	"P2PMetrics\x12P\n" +
	"\vdht_metrics\x18\x01 \x01(\v2/.supernode.StatusResponse.P2PMetrics.DhtMetricsR\n" +
	"dhtMetrics\x12t\n" +
	"\x16network_handle_metrics\x18\x02 \x03(\v2>.supernode.StatusResponse.P2PMetrics.NetworkHandleMetricsEntryR\x14networkHandleMetrics\x12e\n" +
	"\x11conn_pool_metrics\x18\x03 \x03(\v29.supernode.StatusResponse.P2PMetrics.ConnPoolMetricsEntryR\x0fconnPoolMetrics\x12H\n" +
	"\bban_list\x18\x04 \x03(\v2-.supernode.StatusResponse.P2PMetrics.BanEntryR\abanList\x12N\n" +
	"\bdatabase\x18\x05 \x01(\v22.supernode.StatusResponse.P2PMetrics.DatabaseStatsR\bdatabase\x12C\n" +
	"\x04disk\x18\x06 \x01(\v2/.supernode.StatusResponse.P2PMetrics.DiskStatusR\x04disk\x1a\xc0\x05\n" +
	"\n" +
	"DhtMetrics\x12s\n" +
	"\x14store_success_recent\x18\x01 \x03(\v2A.supernode.StatusResponse.P2PMetrics.DhtMetrics.StoreSuccessPointR\x12storeSuccessRecent\x12v\n" +
	"\x15batch_retrieve_recent\x18\x02 \x03(\v2B.supernode.StatusResponse.P2PMetrics.DhtMetrics.BatchRetrievePointR\x13batchRetrieveRecent\x121\n" +
	"\x15hot_path_banned_skips\x18\x03 \x01(\x03R\x12hotPathBannedSkips\x125\n" +
	"\x17hot_path_ban_increments\x18\x04 \x01(\x03R\x14hotPathBanIncrements\x1a\x8f\x01\n" +
	"\x11StoreSuccessPoint\x12\x1b\n" +
	"\ttime_unix\x18\x01 \x01(\x03R\btimeUnix\x12\x1a\n" +
	"\brequests\x18\x02 \x01(\x05R\brequests\x12\x1e\n" +
	"\n" +
	"successful\x18\x03 \x01(\x05R\n" +
	"successful\x12!\n" +
	"\fsuccess_rate\x18\x04 \x01(\x01R\vsuccessRate\x1a\xc8\x01\n" +
	"\x12BatchRetrievePoint\x12\x1b\n" +
	"\ttime_unix\x18\x01 \x01(\x03R\btimeUnix\x12\x12\n" +
	"\x04keys\x18\x02 \x01(\x05R\x04keys\x12\x1a\n" +
	"\brequired\x18\x03 \x01(\x05R\brequired\x12\x1f\n" +
	"\vfound_local\x18\x04 \x01(\x05R\n" +
	"foundLocal\x12#\n" +
	"\rfound_network\x18\x05 \x01(\x05R\ffoundNetwork\x12\x1f\n" +
	"\vduration_ms\x18\x06 \x01(\x03R\n" +
	"durationMs\x1at\n" +
	"\x0eHandleCounters\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\x03R\asuccess\x12\x18\n" +
	"\afailure\x18\x03 \x01(\x03R\afailure\x12\x18\n" +
	"\atimeout\x18\x04 \x01(\x03R\atimeout\x1a\x9d\x01\n" +
	"\bBanEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x05R\x05count\x12&\n" +
	"\x0fcreated_at_unix\x18\x05 \x01(\x03R\rcreatedAtUnix\x12\x1f\n" +
	"\vage_seconds\x18\x06 \x01(\x03R\n" +
	"ageSeconds\x1ae\n" +
	"\rDatabaseStats\x12#\n" +
	"\x0ep2p_db_size_mb\x18\x01 \x01(\x01R\vp2pDbSizeMb\x12/\n" +
	"\x14p2p_db_records_count\x18\x02 \x01(\x03R\x11p2pDbRecordsCount\x1aU\n" +
	"\n" +
	"DiskStatus\x12\x15\n" +
	"\x06all_mb\x18\x01 \x01(\x01R\x05allMb\x12\x17\n" +
	"\aused_mb\x18\x02 \x01(\x01R\x06usedMb\x12\x17\n" +
	"\afree_mb\x18\x03 \x01(\x01R\x06freeMb\x1a|\n" +
	"\x19NetworkHandleMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12I\n" +
	"\x05value\x18\x02 \x01(\v23.supernode.StatusResponse.P2PMetrics.HandleCountersR\x05value:\x028\x01\x1aB\n" +
	"\x14ConnPoolMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01B6Z4github.com/LumeraProtocol/supernode/v2/gen/supernodeb\x06proto3"

var (
	file_supernode_status_proto_rawDescOnce sync.Once
	file_supernode_status_proto_rawDescData []byte
)

func file_supernode_status_proto_rawDescGZIP() []byte {
	file_supernode_status_proto_rawDescOnce.Do(func() {
		file_supernode_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_supernode_status_proto_rawDesc), len(file_supernode_status_proto_rawDesc)))
	})
	return file_supernode_status_proto_rawDescData
}

var file_supernode_status_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_supernode_status_proto_goTypes = []any{
	(*StatusRequest)(nil),                            // 0: supernode.StatusRequest
	(*StatusResponse)(nil),                           // 1: supernode.StatusResponse
	(*StatusResponse_Resources)(nil),                 // 2: supernode.StatusResponse.Resources
	(*StatusResponse_ServiceTasks)(nil),              // 3: supernode.StatusResponse.ServiceTasks
	(*StatusResponse_Network)(nil),                   // 4: supernode.StatusResponse.Network
	(*StatusResponse_P2PMetrics)(nil),                // 5: supernode.StatusResponse.P2PMetrics
	(*StatusResponse_Resources_CPU)(nil),             // 6: supernode.StatusResponse.Resources.CPU
	(*StatusResponse_Resources_Memory)(nil),          // 7: supernode.StatusResponse.Resources.Memory
	(*StatusResponse_Resources_Storage)(nil),         // 8: supernode.StatusResponse.Resources.Storage
	(*StatusResponse_P2PMetrics_DhtMetrics)(nil),     // 9: supernode.StatusResponse.P2PMetrics.DhtMetrics
	(*StatusResponse_P2PMetrics_HandleCounters)(nil), // 10: supernode.StatusResponse.P2PMetrics.HandleCounters
	(*StatusResponse_P2PMetrics_BanEntry)(nil),       // 11: supernode.StatusResponse.P2PMetrics.BanEntry
	(*StatusResponse_P2PMetrics_DatabaseStats)(nil),  // 12: supernode.StatusResponse.P2PMetrics.DatabaseStats
	(*StatusResponse_P2PMetrics_DiskStatus)(nil),     // 13: supernode.StatusResponse.P2PMetrics.DiskStatus
	nil, // 14: supernode.StatusResponse.P2PMetrics.NetworkHandleMetricsEntry
	nil, // 15: supernode.StatusResponse.P2PMetrics.ConnPoolMetricsEntry
	(*StatusResponse_P2PMetrics_DhtMetrics_StoreSuccessPoint)(nil),  // 16: supernode.StatusResponse.P2PMetrics.DhtMetrics.StoreSuccessPoint
	(*StatusResponse_P2PMetrics_DhtMetrics_BatchRetrievePoint)(nil), // 17: supernode.StatusResponse.P2PMetrics.DhtMetrics.BatchRetrievePoint
}
var file_supernode_status_proto_depIdxs = []int32{
	2,  // 0: supernode.StatusResponse.resources:type_name -> supernode.StatusResponse.Resources
	3,  // 1: supernode.StatusResponse.running_tasks:type_name -> supernode.StatusResponse.ServiceTasks
	4,  // 2: supernode.StatusResponse.network:type_name -> supernode.StatusResponse.Network
	5,  // 3: supernode.StatusResponse.p2p_metrics:type_name -> supernode.StatusResponse.P2PMetrics
	6,  // 4: supernode.StatusResponse.Resources.cpu:type_name -> supernode.StatusResponse.Resources.CPU
	7,  // 5: supernode.StatusResponse.Resources.memory:type_name -> supernode.StatusResponse.Resources.Memory
	8,  // 6: supernode.StatusResponse.Resources.storage_volumes:type_name -> supernode.StatusResponse.Resources.Storage
	9,  // 7: supernode.StatusResponse.P2PMetrics.dht_metrics:type_name -> supernode.StatusResponse.P2PMetrics.DhtMetrics
	14, // 8: supernode.StatusResponse.P2PMetrics.network_handle_metrics:type_name -> supernode.StatusResponse.P2PMetrics.NetworkHandleMetricsEntry
	15, // 9: supernode.StatusResponse.P2PMetrics.conn_pool_metrics:type_name -> supernode.StatusResponse.P2PMetrics.ConnPoolMetricsEntry
	11, // 10: supernode.StatusResponse.P2PMetrics.ban_list:type_name -> supernode.StatusResponse.P2PMetrics.BanEntry
	12, // 11: supernode.StatusResponse.P2PMetrics.database:type_name -> supernode.StatusResponse.P2PMetrics.DatabaseStats
	13, // 12: supernode.StatusResponse.P2PMetrics.disk:type_name -> supernode.StatusResponse.P2PMetrics.DiskStatus
	16, // 13: supernode.StatusResponse.P2PMetrics.DhtMetrics.store_success_recent:type_name -> supernode.StatusResponse.P2PMetrics.DhtMetrics.StoreSuccessPoint
	17, // 14: supernode.StatusResponse.P2PMetrics.DhtMetrics.batch_retrieve_recent:type_name -> supernode.StatusResponse.P2PMetrics.DhtMetrics.BatchRetrievePoint
	10, // 15: supernode.StatusResponse.P2PMetrics.NetworkHandleMetricsEntry.value:type_name -> supernode.StatusResponse.P2PMetrics.HandleCounters
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_supernode_status_proto_init() }
func file_supernode_status_proto_init() {
	if File_supernode_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_supernode_status_proto_rawDesc), len(file_supernode_status_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_supernode_status_proto_goTypes,
		DependencyIndexes: file_supernode_status_proto_depIdxs,
		MessageInfos:      file_supernode_status_proto_msgTypes,
	}.Build()
	File_supernode_status_proto = out.File
	file_supernode_status_proto_goTypes = nil
	file_supernode_status_proto_depIdxs = nil
}
